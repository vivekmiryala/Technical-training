# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jC0g4GYcsBF-3mn_6qcsFqZ2O9IF6VCG
"""

import itertools

def tsp(cities):

  permutations = list(itertools.permutations(cities))


  distances = []
  for permutation in permutations:
    distance = 0
    for i in range(len(permutation)):
      city1 = permutation[i]
      city2 = permutation[(i + 1) % len(permutation)]
      distance += ((city1[0] - city2[0]) ** 2 + (city1[1] - city2[1]) ** 2) ** 0.5
    distances.append(distance)


  shortest_tour_index = distances.index(min(distances))
  shortest_tour = permutations[shortest_tour_index]

  return shortest_tour, min(distances)


cities = [(0, 0), (1, 0), (2, 0), (0, 1), (1, 1), (2, 1)]
shortest_tour, distance = tsp(cities)

print("Shortest tour:", shortest_tour)
print("Total distance:", distance)